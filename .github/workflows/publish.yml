name: Build wheels and publish

on:
  workflow_dispatch:
  workflow_call:
  push:

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}-${{ matrix.accelerator }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, windows-2019, macos-latest]
        accelerator: [cpu, cu118, cu124, hip]
        exclude:
          - os: ubuntu-24.04-arm
            accelerator: cu118
          - os: ubuntu-24.04-arm
            accelerator: cu124
          - os: ubuntu-24.04-arm
            accelerator: hip
          - os: macos-latest
            accelerator: cu118
          - os: macos-latest
            accelerator: cu124
          - os: macos-latest
            accelerator: hip

    steps:
      - name: Free space of Github Runner (otherwise it will fail by running out of disk)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "/usr/local/.ghcup"
          sudo rm -rf "/usr/local/julia1.9.2"
          sudo rm -rf "/usr/local/lib/android"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.23.0

      - name: Activate MSVC
        uses: ilammy/msvc-dev-cmd@v1
        if: matrix.os == 'windows-2019'

      - name: "Install OpenCL"
        uses: Jimver/cuda-toolkit@v0.2.16
        if: matrix.os == 'windows-2019'
        id: cuda-toolkit
        with:
          method: "network"
          sub-packages: '["opencl"]'

      - name: "Install dependencies with choco"
        uses: crazy-max/ghaction-chocolatey@v3
        if: matrix.os == 'windows-2019'
        with:
          args: install doxygen.install jom

      - name: Build wheels
        if: matrix.os != 'windows-2019'
        shell: bash -l {0}
        run: python -m cibuildwheel wrappers/python/ --output-dir wheelhouse
        env:
          CIBW_BEFORE_ALL_LINUX: "wrappers/python/cibuildwheel_support/prepare_build_environment_linux.sh"
          CIBW_BEFORE_ALL_MACOS: "wrappers/python/cibuildwheel_support/prepare_build_environment_osx.sh"
          CUDA_VERSION: ${{ matrix.accelerator }}
          ACCELERATOR: ${{ matrix.accelerator }}
          CIBW_BUILD: "cp310-*"

      - name: Build wheels
        if: matrix.os == 'windows-2019'
        shell: cmd # Use cmd on Windows to avoid bash environment taking priority over MSVC variables
        run: python -m cibuildwheel wrappers/python/ --output-dir wheelhouse
        env:
          CIBW_BEFORE_ALL_WINDOWS: "bash wrappers/python/cibuildwheel_support/prepare_build_environment_windows.sh"
          DISTUTILS_USE_SDK: "1" # Windows requires this to use vc for building
          CUDA_VERSION: ${{ matrix.accelerator }}
          ACCELERATOR: ${{ matrix.accelerator }}
          CIBW_BUILD: "cp310-*"
          OPENCL_PATH: "${{steps.cuda-toolkit.outputs.CUDA_PATH}}"

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.accelerator }}-cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
